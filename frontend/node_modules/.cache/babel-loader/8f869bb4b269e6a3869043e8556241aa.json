{"ast":null,"code":"export var BASE_URL=\"https://auth.nomoreparties.co\";var getJson=function getJson(response){if(response.ok){return response.json();}throw new Error({status:response.status});};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(getJson);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(getJson);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(getJson);};","map":{"version":3,"sources":["/Users/nikitaziburtovic/Desktop/yandex_praktikum/react-mesto-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","getJson","response","ok","json","Error","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAc,CAC5B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACf,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,CACD,KAAM,IAAIC,CAAAA,KAAJ,CAAU,CAAEC,MAAM,CAAEJ,QAAQ,CAACI,MAAnB,CAAV,CAAN,CACD,CALD,CAOA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CACjCW,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAAEA,KADY,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CAL2B,CAAvB,CAAL,CASJO,IATI,CASCf,OATD,CAAP,CAUD,CAXM,CAaP,MAAO,IAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIV,QAAJ,YAAuB,CACjCW,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAAEA,KADY,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CAL2B,CAAvB,CAAL,CASJO,IATI,CASCf,OATD,CAAP,CAUD,CAXM,CAaP,MAAO,IAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnC,MAAOT,CAAAA,KAAK,WAAIV,QAAJ,cAAyB,CACnCW,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA4BO,KAA5B,CAFO,CAF0B,CAAzB,CAAL,CAMJH,IANI,CAMCf,OAND,CAAP,CAOD,CARM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst getJson = (response) => {\n  if (response.ok) {\n    return response.json();\n  }\n  throw new Error({ status: response.status });\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(getJson);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  }).then(getJson);\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    },\n  }).then(getJson);\n};\n\n"]},"metadata":{},"sourceType":"module"}