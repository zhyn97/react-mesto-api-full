{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaziburtovic/Desktop/yandex_praktikum/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    api.editUserData(name, about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    api.newAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    api.addNewCard(name, link).then(res => {\n      console.log(res);\n      setCards([...cards]);\n      closeAllPopups();\n      console.log(cards);\n    }).catch(err => console.log(err));\n  }\n\n  function getCards() {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  }\n\n  React.useEffect(() => {\n    getCards();\n  }, []);\n  React.useEffect(() => {\n    api.getUserData().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardDelete: handleCardDelete,\n        onCardLike: handleCardLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onCardAdd: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        title: \"Вы уверены?\",\n        name: \"popup_delete-card\",\n        buttonText: \"Да\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZzPGyOQ+aByHTAs5NTq7VT+U1aI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitaziburtovic/Desktop/yandex_praktikum/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","cards","setCards","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","currentUser","setCurrentUser","selectedCard","setSelectedCard","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","name","about","editUserData","then","res","catch","err","console","log","handleUpdateAvatar","avatar","newAvatar","handleAddPlaceSubmit","link","addNewCard","getCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","useEffect","getUserData"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .editUserData(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .newAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({name, link}){\n    api\n      .addNewCard(name, link)\n      .then((res) => {\n        console.log(res)\n        setCards([...cards]); \n        closeAllPopups();\n        console.log(cards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function getCards() {\n    api\n      .getCards()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards((state) => state.filter((c) => c._id !== card._id));\n    });\n  }\n\n  React.useEffect(() => {\n    getCards();\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getUserData()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardDelete={handleCardDelete}\n          onCardLike={handleCardLike}\n        />\n        <Footer />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onCardAdd={handleAddPlaceSubmit}\n        />\n\n        <PopupWithForm\n          title={\"Вы уверены?\"}\n          name={\"popup_delete-card\"}\n          buttonText={\"Да\"}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}