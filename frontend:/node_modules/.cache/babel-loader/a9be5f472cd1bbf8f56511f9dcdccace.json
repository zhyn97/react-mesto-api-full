{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaziburtovic/Desktop/yandex_praktikum/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Card from \"./Card\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const currentUser = useContext(CurrentUserContext); // const [cards, setCards] = React.useState([]);\n  // function handleCardLike(card) {\n  //   // Снова проверяем, есть ли уже лайк на этой карточке\n  //   const isLiked = card.likes.some((i) => i._id === currentUser._id);\n  //   // Отправляем запрос в API и получаем обновлённые данные карточки\n  //   api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //     setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //   });\n  // }\n  // function handleCardDelete(card) {\n  //   api.deleteCard(card._id).then(() => {\n  //     setCards((state) => state.filter((c) => (c._id !== card._id)));\n  //   })\n  // }\n  // function getCards() {\n  //   api\n  //     .getCards()\n  //     .then((res) => {\n  //       setCards(res);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n  // React.useEffect(() => {\n  //   getCards();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: props.onEditAvatar,\n        className: \"profile__avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__edit-view\",\n          src: currentUser.avatar,\n          alt: \"фото профиля\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onEditProfile,\n          className: \"profile__edit-button opacity-button\",\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__occupation\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onAddPlace,\n        className: \"profile__add-button opacity-button\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places\",\n      children: props.cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        onCardDelete: props.onCardDelete,\n        onCardLike: props.onCardLike,\n        ...item,\n        card: item,\n        onCardClick: props.onCardClick\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/nikitaziburtovic/Desktop/yandex_praktikum/mesto-react/src/components/Main.js"],"names":["React","useContext","Card","api","CurrentUserContext","Main","props","currentUser","onEditAvatar","avatar","name","onEditProfile","about","onAddPlace","cards","map","item","onCardDelete","onCardLike","onCardClick","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,WAAW,GAAGN,UAAU,CAACG,kBAAD,CAA9B,CADmB,CAGnB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAK,QAAA,OAAO,EAAEE,KAAK,CAACE,YAApB;AAAkC,QAAA,SAAS,EAAC,iBAA5C;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,oBADZ;AAEE,UAAA,GAAG,EAAED,WAAW,CAACE,MAFnB;AAGE,UAAA,GAAG,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BF,WAAW,CAACG;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,OAAO,EAAEJ,KAAK,CAACK,aADjB;AAEE,UAAA,SAAS,EAAC,qCAFZ;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,oBAAoCJ,WAAW,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAiBE;AACE,QAAA,OAAO,EAAEN,KAAK,CAACO,UADjB;AAEE,QAAA,SAAS,EAAC,oCAFZ;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA,gBACGP,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf,QAAC,IAAD;AACE,QAAA,YAAY,EAAEV,KAAK,CAACW,YADtB;AAEE,QAAA,UAAU,EAAEX,KAAK,CAACY,UAFpB;AAAA,WAIMF,IAJN;AAKE,QAAA,IAAI,EAAEA,IALR;AAME,QAAA,WAAW,EAAEV,KAAK,CAACa;AANrB,SAGOH,IAAI,CAACI,GAHZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAzEQf,I;;KAAAA,I;AA2ET,eAAeA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\n\nimport Card from \"./Card\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  // const [cards, setCards] = React.useState([]);\n\n  // function handleCardLike(card) {\n  //   // Снова проверяем, есть ли уже лайк на этой карточке\n  //   const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  //   // Отправляем запрос в API и получаем обновлённые данные карточки\n  //   api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //     setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n  //   });\n  // }\n\n  // function handleCardDelete(card) {\n  //   api.deleteCard(card._id).then(() => {\n  //     setCards((state) => state.filter((c) => (c._id !== card._id)));\n  //   })\n  // }\n\n  // function getCards() {\n  //   api\n  //     .getCards()\n  //     .then((res) => {\n  //       setCards(res);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }\n\n  // React.useEffect(() => {\n  //   getCards();\n  // }, []);\n\n  return (\n    <main>\n      <section className=\"profile\">\n        <div onClick={props.onEditAvatar} className=\"profile__avatar\">\n          <img\n            className=\"profile__edit-view\"\n            src={currentUser.avatar}\n            alt={\"фото профиля\"}\n          />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button\n            onClick={props.onEditProfile}\n            className=\"profile__edit-button opacity-button\"\n            type=\"button\"\n          ></button>\n          <p className=\"profile__occupation\">{currentUser.about}</p>\n        </div>\n        <button\n          onClick={props.onAddPlace}\n          className=\"profile__add-button opacity-button\"\n          type=\"button\"\n        ></button>\n      </section>\n      <section className=\"places\">\n        {props.cards.map((item) => (\n          <Card\n            onCardDelete={props.onCardDelete}\n            onCardLike={props.onCardLike}\n            key={item._id}\n            {...item}\n            card={item}\n            onCardClick={props.onCardClick}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}