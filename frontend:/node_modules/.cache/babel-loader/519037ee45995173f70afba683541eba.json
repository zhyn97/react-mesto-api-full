{"ast":null,"code":"import _classCallCheck from\"/Users/nikitaziburtovic/Desktop/yandex_praktikum/react-mesto-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nikitaziburtovic/Desktop/yandex_praktikum/react-mesto-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var address=_ref.address,token=_ref.token;_classCallCheck(this,Api);this.address=address;this.token=token;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 : \".concat(res.status));}}},{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this.address,\"/users/me\"),{headers:{authorization:this.token}}).then(this._checkResponse);}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this.address,\"/cards\"),{headers:{authorization:this.token}}).then(this._checkResponse);}},{key:\"editUserData\",value:function editUserData(name,about){return fetch(\"\".concat(this.address,\"/users/me\"),{method:\"PATCH\",headers:{authorization:this.token,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch(\"\".concat(this.address,\"/cards\"),{method:\"POST\",headers:{authorization:this.token,\"Content-Type\":\"application/json\"},body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this.address,\"/cards/\").concat(id),{method:\"DELETE\",headers:{authorization:this.token}}).then(this._checkResponse);}},{key:\"setLike\",value:function setLike(id){return fetch(\"\".concat(this.address,\"/cards/\").concat(id,\"/likes\"),{method:\"PUT\",headers:{authorization:this.token}}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(!isLiked){return fetch(\"\".concat(this.address,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:{authorization:this.token}}).then(this._checkResponse);}else{return fetch(\"\".concat(this.address,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:{authorization:this.token}}).then(this._checkResponse);}}},{key:\"deleteLike\",value:function deleteLike(id){return fetch(\"\".concat(this.address,\"/cards/\").concat(id,\"/likes\"),{method:\"DELETE\",headers:{authorization:this.token}}).then(this._checkResponse);}},{key:\"newAvatar\",value:function newAvatar(link){return fetch(\"\".concat(this.address,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:this.token,\"Content-Type\":\"application/json\"},body:JSON.stringify({avatar:link})}).then(this._checkResponse);}}]);return Api;}();var api=new Api({address:\"https://mesto.nomoreparties.co/v1/cohort-32\",token:\"375f8480-1170-4121-a89c-9ffd6ccda63c\"});export default api;","map":{"version":3,"sources":["/Users/nikitaziburtovic/Desktop/yandex_praktikum/react-mesto-auth/react-mesto-auth/src/utils/api.js"],"names":["Api","address","token","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_checkResponse","name","about","method","body","JSON","stringify","link","id","cardId","isLiked","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ address, token }) {\n    this.address = address;\n    this.token = token;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка : ${res.status}`);\n    }\n  }\n\n  getUserData() {\n    return fetch(`${this.address}/users/me`, {\n      headers: {\n        authorization: this.token,\n      },\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this.address}/cards`, {\n      headers: {\n        authorization: this.token,\n      },\n    }).then(this._checkResponse);\n  }\n\n  editUserData(name, about) {\n    return fetch(`${this.address}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this.address}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this.address}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this.token,\n      },\n    }).then(this._checkResponse);\n  }\n\n  setLike(id) {\n    return fetch(`${this.address}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this.token,\n      },\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (!isLiked) {\n      return fetch(`${this.address}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this.token,\n        },\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this.address}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this.token,\n        },\n      }).then(this._checkResponse);\n    }\n  }\n\n  deleteLike(id) {\n    return fetch(`${this.address}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this.token,\n      },\n    }).then(this._checkResponse);\n  }\n\n  newAvatar(link) {\n    return fetch(`${this.address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: link,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  address: \"https://mesto.nomoreparties.co/v1/cohort-32\",\n  token: \"375f8480-1170-4121-a89c-9ffd6ccda63c\",\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}